import { MigrationBuilder } from "node-pg-migrate";

export async function up(pgm: MigrationBuilder): Promise<void> {
  pgm.createTable("attributes", {
    id: {
      type: "int generated by default as identity",
      notNull: true,
    },
    category: {
      type: "text",
      notNull: true,
    },
    key: {
      type: "text",
      notNull: true,
    },
    value: {
      type: "text",
      notNull: true,
    },
  });
  pgm.createConstraint("attributes", "attributes_pk", {
    primaryKey: ["id"],
  });
  pgm.createConstraint("attributes", "attributes_category_key_value_unique", {
    unique: ["category", "key", "value"],
  });

  pgm.createTable("tokens_attributes", {
    contract: {
      type: "text",
      notNull: true,
    },
    token_id: {
      type: "numeric(78, 0)",
      notNull: true,
    },
    attribute_id: {
      type: "int",
      notNull: true,
    },
  });
  pgm.createConstraint("tokens_attributes", "tokens_attributes_pk", {
    primaryKey: ["contract", "token_id", "attribute_id"],
  });
  pgm.createConstraint("tokens_attributes", "tokens_attributes_token_fk", {
    foreignKeys: {
      columns: ["contract", "token_id"],
      references: "tokens(contract, token_id)",
    },
  });
  pgm.createConstraint("tokens_attributes", "tokens_attributes_attribute_fk", {
    foreignKeys: {
      columns: ["attribute_id"],
      references: "attributes(id)",
    },
  });

  pgm.createIndex("tokens_attributes", ["attribute_id"]);
}

export async function down(pgm: MigrationBuilder): Promise<void> {
  pgm.dropIndex("tokens_attributes", ["attribute_id"]);

  pgm.dropTable("tokens_attributes");

  pgm.dropTable("attributes");
}
